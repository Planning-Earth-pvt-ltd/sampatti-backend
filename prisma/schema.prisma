// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// KYC Enum
enum KYCStatus {
  PENDING
  APPROVED
  REJECTED
}

// User Schema

model User {
  id String @id @default(cuid()) @map("userId")

  fullName      String
  phoneNumber   String    @unique
  email         String?   @unique
  kycStatus     KYCStatus @default(PENDING)
  isKycVerified Boolean   @default(false)
  createdBy     String    @default("user")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  Token         Token[]
}

// TokenSchema 

model Token {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime

  // Relation to User model
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  //Indexes for queries

  @@index([userId])
  @@index([token])
  @@index([expiresAt])
  @@map("user_tokens")
}
