datasource db {
  provider  = "postgresql" // or your database provider (e.g., mysql)
  url       = env("DATABASE_URL") // Ensure this is set in your `.env` file
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}


enum KYCStatus {
  PENDING
  APPROVED
  REJECTED
}

model User {
  id            String    @id @default(cuid()) @map("userId")
  fullName      String
  phoneNumber   String    @unique
  email         String?   @unique
  isKycVerified Boolean   @default(false)
  createdBy     String    @default("user")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  kycStatus     KYCStatus @default(PENDING)
  Token         Token[]

  @@map("users")
}

model Token {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId])
  @@index([token])
  @@index([expiresAt])
  @@map("user_tokens")
}

model Property {
  id               String         @id @default(cuid())
  title            String
  description      String
  address          String
  city             String
  state            String
  propertyCategory PropertyCategory   
  propertyType     String
  propertySubType  String?    
  images           String[]     
  propertyType     PropertyType
  totalAreaSqft    Float
  TotalTokens      Int
  currentValuation Float
  PricePerSqFt     Float
  SqFtAreaPerToken Float
  PricePerToken    Float
  status           PropertyStatus
  ownerUserId      String
  seller           Seller         @relation(fields: [sellerId], references: [id])
  sellerId         String
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}


enum KYCStatus {
  PENDING
  APPROVED
  REJECTED
}

enum PropertyCategory{
  Residential
  Commercial
  Industrial
  Land
}

enum PropertyStatus {
  Listed
  Active
  Sold
  Funded
}

model Seller {
  id          String     @id @default(cuid())
  name        String
  phoneNumber String     @unique
  address     String
  PropertyId  Property[] // One seller - many properties
}

